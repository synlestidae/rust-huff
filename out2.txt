     Running target\debug\compress-3a137050136a5d02.exe

running 20 tests
test algorithm::hufftests::simple_compress_decompress_test_1 ... ok
test algorithm::hufftests::simple_compress_decompress_test_3 ... ok
test algorithm::hufftests::simple_compress_decompress_test_4 ... ok
test algorithm::hufftests::simple_compress_decompress_test_2 ... ok
test algorithm::hufftests::simple_compress_test_1 ... ok
test algorithm::hufftests::simple_compress_decompress_test_5 ... FAILED
test algorithm::hufftests::simple_tree_test_1 ... ok
test algorithm::hufftests::simple_tree_1 ... ok
test algorithm::hufftests::simple_tree_walk_1 ... ok
test algorithm::hufftests::simple_tree_test_2 ... ok
test algorithm::hufftests::test_make_bits_0 ... ok
test algorithm::hufftests::test_make_bits_1 ... ok
test algorithm::hufftests::test_make_bits_70 ... ok
test algorithm::hufftests::test_make_bits_32 ... ok
test tree::hufftests::smoke_code_2_elems ... ok
test tree::hufftests::smoke_test1 ... ok
test tree::hufftests::smoke_test2 ... ok
test tree::hufftests::smoke_test3 ... ok
test tree::hufftests::test_tree_has_elems_1 ... ok
test tree::hufftests::test_tree_has_elems_2 ... ok

failures:

---- algorithm::hufftests::simple_compress_decompress_test_5 stdout ----
	Encode 0 as [false]
Encode 2 as [true, false]
Encode 1 as [true, true]

Tree: HuffmanTree { 
	zero: Some(HuffmanTree { zero: None, one: None, count: 1, elem: [0] }), 
	one: Some(HuffmanTree { 
		zero: Some(HuffmanTree { zero: None, one: None, count: 1, elem: [2] }), 
		one: Some(HuffmanTree { zero: None, one: None, count: 1, elem: [1] }), 
		count: 2, 
		elem: [2, 1] 
		}), 
	count: 3, 
	elem: [0, 2, 1] 
}
Decompressing: [false, true, false, true, true, false, false, false]
Node: HuffmanTree { zero: None, one: None, count: 1, elem: [0] }
Decompressing: [true, false, true, true, false, false, false]
Node: HuffmanTree { zero: None, one: None, count: 1, elem: [0] }
Decompressing: [true, true, false, false, false]
Node: HuffmanTree { zero: None, one: None, count: 1, elem: [0] }
thread 'algorithm::hufftests::simple_compress_decompress_test_5' panicked at 'assertion failed: `(left == right)` (left: `[0, 2, 1]`, right: `[0, 0, 0]`)', src\algorithm/mod.rs:314



failures:
    algorithm::hufftests::simple_compress_decompress_test_5

test result: FAILED. 19 passed; 1 failed; 0 ignored; 0 measured

